# code: language=ansible

# Set of tasks for creating performing a Trilio for Kubernetes Restore when using password auth
#
# Authors: Kevin Jackson <kevin.jackson at trilio io>

- name: Create Restore Tasks
  tags: ['restore', 'smoketest']
  block:
    - name: Set restore name
      ansible.builtin.set_fact:
        trilio_kubernetes_restore_name: "{{ trilio_kubernetes_backupplan_name }}-{{ ansible_date_time.date }}-{{ ansible_date_time.epoch }}"

    - name: Configure the restore from {{ trilio_kubernetes_backupplan_name }}
      ansible.builtin.template:
        src: templates/restore-{{ trilio_kubernetes_restore_type }}.yaml.j2
        dest: /tmp/{{ trilio_kubernetes_backupplan_name }}-restore.yaml
        mode: "0640"

    # Execute the specified backup restore in specifed namespace
    - name: Execute the restore of {{ trilio_kubernetes_restore_name }}
      kubernetes.core.k8s:
        api_key: "{{ trilio_kubernetes_auth_results.k8s_auth.api_key }}"
        host: "{{ trilio_kubernetes_host }}"
        kind: Restore
        state: present
        namespace: "{{ trilio_kubernetes_restore_namespace }}"
        src: "/tmp/{{ trilio_kubernetes_backupplan_name }}-restore.yaml"
        validate_certs: false
      register: trilio_kubernetes_restore

    - name: Wait for restore of {{ trilio_kubernetes_restore_name }}
      when:
        - trilio_kubernetes_auth_type == "password"
        - trilio_kubernetes_distro == "openshift"
        - trilio_kubernetes_cli | bool
      ansible.builtin.shell: |
        oc login "{{ trilio_kubernetes_auth_api }}" --token="{{ trilio_kubernetes_auth_results.openshift_auth.api_key }}" \
          --insecure-skip-tls-verify=true 2>&/dev/null
        oc get restores/{{ trilio_kubernetes_restore_name }} -n {{ trilio_kubernetes_restore_namespace }}
      register: trilio_kubernetes_restore_available
      retries: "{{ trilio_kubernetes_restore_polling_retries }}"
      delay: "{{ trilio_kubernetes_restore_polling_every_seconds }}"
      until: trilio_kubernetes_restore_available.stdout.find("Completed") != -1
      ignore_errors: true

    - name: Show restore output
      ansible.builtin.debug:
        var: trilio_kubernetes_restore_available.stdout_lines
