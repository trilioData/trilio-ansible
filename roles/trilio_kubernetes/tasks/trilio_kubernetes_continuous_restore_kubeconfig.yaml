# code: language=ansible

# Set of tasks for creating performing a Trilio for Kubernetes Restore when using password auth
#
# Authors: Kevin Jackson <kevin.jackson at trilio io>

- name: Prepare Continuous Restore Tasks
  tags: ['restore']
  block:
    - name: Identify Continuous Restore Policy for {{ trilio_kubernetes_restore_namespace }}
      when:
        - trilio_kubernetes_auth_type == "external"
      ansible.builtin.shell: |
        set -o pipefail
        kubectl -s $K8S_AUTH_HOST --token="$K8S_AUTH_API_KEY" --insecure-skip-tls-verify \
          get continuousrestoreplan.triliovault.trilio.io | awk '/Available/ {print $1}' \
        | while read CRP
        do
          CRP_MATCH=$(kubectl -s $K8S_AUTH_HOST --token="$K8S_AUTH_API_KEY" --insecure-skip-tls-verify \
            get continuousrestoreplan.triliovault.trilio.io/$CRP -o yaml \
            | grep "{{ trilio_kubernetes_restore_namespace }}/{{ trilio_kubernetes_cr_backupplan }}")
          if [[ -n "$CRP_MATCH" ]]
          then
            echo "$CRP"
            break
          fi
        done
      register: trilio_kubernetes_continuous_restore_policy

  #  - name: Show CR Policy output
  #    ansible.builtin.debug:
  #      var: trilio_kubernetes_continuous_restore_policy.stdout_lines

    - name: Identify Last Consistent Set in {{ trilio_kubernetes_continuous_restore_policy.continuous_restore_policy.stdout_lines }}
      when:
        - trilio_kubernetes_auth_type == "external"
      ansible.builtin.shell: |
        set -o pipefail
        kubectl -s $K8S_AUTH_HOST --token="$K8S_AUTH_API_KEY" --insecure-skip-tls-verify \
          get consistentsets | grep "{{ trilio_kubernetes_continuous_restore_policy.stdout }}" | awk '{print $8,$1}' | sort -n | head -1 | awk '{print $2}'
      register: trilio_kubernetes_continuous_restore_cs

    - name: Show Last ConsistentSet
      ansible.builtin.debug:
        var: trilio_kubernetes_continuous_restore_cs.stdout_lines

    - name: Identify Location from Last Consistent Set {{ trilio_kubernetes_continuous_restore_cs.stdout_lines }}
      when:
        - trilio_kubernetes_auth_type == "external"
      ansible.builtin.shell: |
        set -o pipefail
        kubectl -s $K8S_AUTH_HOST --token="$K8S_AUTH_API_KEY" --insecure-skip-tls-verify \
          get consistentsets/{{ trilio_kubernetes_continuous_restore_cs.stdout }} -o yaml | grep location: | head -1 | awk '{print $1,$2}'
      register: trilio_kubernetes_continuous_restore_location

    - name: Show location to restore from
      ansible.builtin.debug:
        var: trilio_kubernetes_continuous_restore_location.stdout_lines