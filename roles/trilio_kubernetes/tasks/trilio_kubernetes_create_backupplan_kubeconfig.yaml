# code: language=ansible

# Set of tasks for creating a Trilio for Kubernetes Backup Plan in a namespace
# for describing what and where to backup
#
# Authors: Kevin Jackson <kevin.jackson at trilio io>

- name: Create Backup Plan Tasks
  tags: ['backup', 'backupplan', 'smoketest', 'autoprotect']
  block:
    - name: Configure the backup plan in {{ trilio_kubernetes_namespace_create }}
      ansible.builtin.template:
        src: templates/backupplan.yaml.j2
        dest: /tmp/{{ trilio_kubernetes_backupplan_name }}-backupplan.yaml
        mode: "0600"

    # Create the specified backup plan in specifed namespace
    - name: Create for the backup plan "{{ trilio_kubernetes_backupplan_name }}"
      kubernetes.core.k8s:
        kind: BackupPlan
        state: present
        namespace: "{{ trilio_kubernetes_namespace_create }}"
        src: "/tmp/{{ trilio_kubernetes_backupplan_name }}-backupplan.yaml"
        validate_certs: false
      register: trilio_kubernetes_backupplan

      #    - name: Wait for the backup plan to be created "{{ trilio_kubernetes_backupplan_name }}"
      #      when: trilio_kubernetes_auth_type == "kubeconfig"
      #      ansible.builtin.shell: >
      #        kubectl get backupplans/"{{ trilio_kubernetes_backupplan_name }}" -n {{ trilio_kubernetes_namespace_create }}
      #      environment:
      #        KUBECONFIG: "{{ kubeconfig }}"
      #      register: trilio_kubernetes_backupplan_available
      #      retries: 5
      #      delay: 5
      #      until: trilio_kubernetes_backupplan_available.stdout.find("Available") != -1
      #      ignore_errors: true

    - name: Wait for the backup plan to be created "{{ trilio_kubernetes_backupplan_name }}"
      ansible.builtin.shell: |
        set -o pipefail
        oc login $K8S_AUTH_HOST --token="$K8S_AUTH_API_KEY" --insecure-skip-tls-verify=true
        oc get backupplans/"{{ trilio_kubernetes_backupplan_name }}" -n {{ trilio_kubernetes_namespace_create }}
      register: trilio_kubernetes_backupplan_available
      retries: 5
      delay: 5
      until: trilio_kubernetes_backupplan_available.stdout.find("Available") != -1
      ignore_errors: true
      when:
        - trilio_kubernetes_auth_type == "external"
        - trilio_kubernetes_distro == "openshift"
      changed_when: trilio_kubernetes_backupplan_available.rc != 0
