# code: language=ansible

# Set of tasks for creating a Trilio for Kubernetes Backup where auth is kubeconfig
#
# Authors: Kevin Jackson <kevin.jackson at trilio io>

- name: Execute Backup Tasks
  tags: ['backup', 'backupplan', 'smoketest', 'autoprotect']
  block:
    - name: Set backup name
      ansible.builtin.set_fact:
        trilio_kubernetes_backup_name: "{{ trilio_kubernetes_backupplan_name_var }}-{{ ansible_date_time.date }}-{{ ansible_date_time.epoch }}"

    - name: Configure the backup using {{ trilio_kubernetes_backupplan_name_var }}
      ansible.builtin.template:
        src: templates/backup.yaml.j2
        dest: /tmp/{{ trilio_kubernetes_backupplan_name_var }}-backup.yaml
        mode: "0600"

    # Create the specified backup plan in specifed namespace
    - name: Execute the backup of {{ trilio_kubernetes_backup_name }}
      kubernetes.core.k8s:
        kind: Backup
        state: present
        namespace: "{{ trilio_kubernetes_namespace_var }}"
        src: "/tmp/{{ trilio_kubernetes_backupplan_name_var }}-backup.yaml"
        validate_certs: false
        wait: true
        wait_sleep: 60
        wait_timeout: 10
      register: trilio_kubernetes_backup

    - name: Wait for backup of {{ trilio_kubernetes_backup_name }}
      when:
        - trilio_kubernetes_auth_type == "external"
        - trilio_kubernetes_backup_wait | bool
      ansible.builtin.shell:
        kubectl -s $K8S_AUTH_HOST --token="$K8S_AUTH_API_KEY" --insecure-skip-tls-verify \
          get backups/{{ trilio_kubernetes_backup_name }} -n {{ trilio_kubernetes_namespace_var }}
      register: trilio_kubernetes_backup_available
      retries: "{{ trilio_kubernetes_backup_polling_retries }}"
      delay: "{{ trilio_kubernetes_backup_polling_every_seconds }}"
      until: trilio_kubernetes_backup_available.stdout.find("Available") != -1
      ignore_errors: true
      changed_when: trilio_kubernetes_backup_available.rc != 0

    - name: Wait for backup of {{ trilio_kubernetes_backup_name }}
      when:
        - trilio_kubernetes_auth_type == "kubeconfig"
        - trilio_kubernetes_backup_wait | bool
      ansible.builtin.shell: >
        kubectl get backups/{{ trilio_kubernetes_backupplan_name_var }}-{{ ansible_date_time.date }}-{{ ansible_date_time.epoch }} \
          -n {{ trilio_kubernetes_namespace_var }}
      environment:
        KUBECONFIG: "{{ trilio_kubernetes_kubeconfig }}"
      register: trilio_kubernetes_backup_available
      retries: "{{ trilio_kubernetes_backup_polling_retries }}"
      delay: "{{ trilio_kubernetes_backup_polling_every_seconds }}"
      until: trilio_kubernetes_backup_available.stdout.find("Available") != -1
      ignore_errors: true
      changed_when: trilio_kubernetes_backup_available.rc != 0
