# code: language=ansible
# Set of tasks for creating a Trilio for Kubernetes Target in a namespace
# for storing backups (password auth)
#
# Authors: Kevin Jackson <kevin.jackson at trilio io>

- name: Create Target
  tags: ['target', 'smoketest', 'migrate']
  when: trilio_kubernetes_target_type | lower == "s3"
  block:
    - name: Configure the target yaml
      ansible.builtin.template:
        src: templates/target.yaml.j2
        dest: /tmp/target.yaml
        mode: "0600"

    - name: Create the target in the namespace {{ trilio_kubernetes_namespace_var }}
      kubernetes.core.k8s:
        api_key: "{{ trilio_kubernetes_auth_results.k8s_auth.api_key }}"
        kind: Target
        state: present
        namespace: "{{ trilio_kubernetes_namespace_var }}"
        src: "/tmp/target.yaml"
        validate_certs: false
      register: trilio_kubernetes_target
      when: trilio_kubernetes_auth_type == 'password'

    - name: Wait for target to be created in the namespace {{ trilio_kubernetes_namespace_var }}
      ansible.builtin.shell: |
        oc login "{{ trilio_kubernetes_auth_api }}" --token="{{ trilio_kubernetes_auth_results.openshift_auth.api_key }}" --insecure-skip-tls-verify=true
        oc get targets/"{{ trilio_kubernetes_target_name }}" -n {{ trilio_kubernetes_namespace_var }}
      register: trilio_kubernetes_target_available
      retries: "{{ trilio_kubernetes_target_polling_retries }}"
      delay: "{{ trilio_kubernetes_target_polling_every_seconds }}"
      until: trilio_kubernetes_target_available.stdout.find("Available") != -1
      ignore_errors: true
      when:
        - trilio_kubernetes_auth_type == "password"
        - trilio_kubernetes_distro == "openshift"
        - trilio_kubernetes_cli | bool
      changed_when: trilio_kubernetes_target_available.rc != 0

- name: Show target creation output
  ansible.builtin.debug:
    var: trilio_kubernetes_target_available.stdout_lines
