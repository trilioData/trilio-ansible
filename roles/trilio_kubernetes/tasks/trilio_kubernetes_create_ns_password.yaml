# code: language=ansible

- name: Set namespace name
  tags: ['namespace', 'ns', 'smoketest', 'deploy_app', 'restore']
  ansible.builtin.set_fact:
    trilio_kubernetes_namespace_create: "{{ trilio_kubernetes_namespace }}"

- name: Create namespace {{ trilio_kubernetes_namespace_create }}
  tags: ['namespace', 'ns', 'smoketest', 'deploy_app', 'restore']
  kubernetes.core.k8s:
    name: "{{ trilio_kubernetes_namespace_create }}"
    host: "{{ trilio_kubernetes_host }}"
    api_version: v1
    api_key: "{{ trilio_kubernetes_auth_results.k8s_auth.api_key }}"
    kind: Namespace
    validate_certs: false
    state: present
  when: trilio_kubernetes_auth_type == 'password'

# For OpenShift we need to ensure the correct SCC is allowed
# Hack: ensure SCC is set, assumes kubeadmin username
- name: Set SCC Policy for namespace for OpenShift deployments
  tags: ['namespace', 'ns', 'smoketest', 'deploy_app', 'restore']
  when:
    - trilio_kubernetes_auth_type == "password"
    - trilio_kubernetes_distro == "openshift"
    - trilio_kubernetes_username == "kubeadmin"
    - trilio_kubernetes_scc_policy_anyuid_to_ns | bool
    - trilio_kubernetes_cli | bool
  ansible.builtin.shell: |
    oc login "{{ trilio_kubernetes_auth_api }}" --token="{{ trilio_kubernetes_auth_results.openshift_auth.api_key }}" --insecure-skip-tls-verify=true
    oc adm policy add-scc-to-user anyuid -z default -n "{{ trilio_kubernetes_namespace_create }}"
  register: trilio_kubernetes_scc
  changed_when: trilio_kubernetes_scc.rc != 0
