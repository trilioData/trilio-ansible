# code: language=ansible

# Set of tasks for creating performing a Trilio for Kubernetes Restore when using kubeconfig
#
# Authors: Kevin Jackson <kevin.jackson at trilio io>

- name: Create Restore Tasks
  tags: ['restore', 'smoketest']
  block:
    - name: Create Restore Namespace
      ansible.builtin.include_tasks: trilio_kubernetes_create_ns.yaml
      vars:
        trilio_kubernetes_namespace: "{{ trilio_kubernetes_restore_namespace }}"

    - name: Set restore name
      ansible.builtin.set_fact:
        trilio_kubernetes_restore_name: "{{ trilio_kubernetes_backupplan_name }}-{{ ansible_date_time.date }}-{{ ansible_date_time.epoch }}"

    - name: Configure the restore from {{ trilio_kubernetes_backupplan_name }}
      ansible.builtin.template:
        src: templates/restore-{{ trilio_kubernetes_restore_type }}.yaml.j2
        dest: /tmp/{{ trilio_kubernetes_backupplan_name }}-{{ trilio_kubernetes_restore_type }}-restore.yaml
        mode: "0600"

    # Delete PVC (CR Only)
    - name: Delete PVC {{ trilio_kubernetes_continuous_restore_pvc.stdout }}
      when:
        - trilio_kubernetes_restore_delete_pvc_before_restore | bool
        - trilio_kubernetes_continuous_restore_pvc | length > 0
      kubernetes.core.k8s:
        kind: PersistentVolumeClaim
        state: absent
        namespace: "{{ trilio_kubernetes_restore_namespace }}"
        name: "{{ trilio_kubernetes_continuous_restore_pvc.stdout }}"
        validate_certs: false
      register: trilio_kubernetes_delete_pvc

    # Execute the specified backup restore in specifed namespace
    - name: Execute the restore of {{ trilio_kubernetes_restore_name }}
      kubernetes.core.k8s:
        kind: Restore
        state: present
        namespace: "{{ trilio_kubernetes_restore_namespace }}"
        src: "/tmp/{{ trilio_kubernetes_backupplan_name }}-{{ trilio_kubernetes_restore_type }}-restore.yaml"
        validate_certs: false
      register: trilio_kubernetes_restore

    - name: Wait for restore of {{ trilio_kubernetes_restore_name }}
      when:
        - trilio_kubernetes_auth_type == "external"
      ansible.builtin.shell:
        kubectl -s $K8S_AUTH_HOST --token="$K8S_AUTH_API_KEY" --insecure-skip-tls-verify \
          get restore/{{ trilio_kubernetes_restore_name }} -n {{ trilio_kubernetes_restore_namespace }}
      register: trilio_kubernetes_restore_completed
      retries: "{{ trilio_kubernetes_restore_polling_retries }}"
      delay: "{{ trilio_kubernetes_restore_polling_every_seconds }}"
      until: trilio_kubernetes_restore_completed.stdout.find("Completed") != -1
      ignore_errors: true
      changed_when: trilio_kubernetes_restore_completed.rc != 0


    - name: Wait for restore of {{ trilio_kubernetes_restore_name }}
      when: trilio_kubernetes_auth_type == "kubeconfig"
      ansible.builtin.shell: >
        kubectl get restores/{{ trilio_kubernetes_restore_name }} -n {{ trilio_kubernetes_restore_namespace }}
      register: trilio_kubernetes_restore_completed
      retries: "{{ trilio_kubernetes_restore_retries }}"
      delay: "{{ trilio_kubernetes_restore_delay_seconds }}"
      until: trilio_kubernetes_restore_completed.stdout.find("Completed") != -1
      ignore_errors: true
      changed_when: trilio_kubernetes_restore_completed.rc != 0
